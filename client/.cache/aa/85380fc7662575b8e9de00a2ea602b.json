{"id":"3akj","dependencies":[{"name":"/home/yusta/Desktop/test/client/package.json","includedInParent":true,"mtime":1547554751677},{"name":"/home/yusta/Desktop/test/client/node_modules/phaser/package.json","includedInParent":true,"mtime":1547552852568},{"name":"./Clone","loc":{"line":7,"column":20},"parent":"/home/yusta/Desktop/test/client/node_modules/phaser/src/utils/object/MergeRight.js","resolved":"/home/yusta/Desktop/test/client/node_modules/phaser/src/utils/object/Clone.js"}],"generated":{"js":"var r=require(\"./Clone\"),e=function(e,n){var o=r(e);for(var a in n)o.hasOwnProperty(a)&&(o[a]=n[a]);return o};module.exports=e;","map":{"mappings":[{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":22,"column":0},"generated":{"line":1,"column":25}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":22,"column":0},"generated":{"line":1,"column":27}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":22,"column":0},"generated":{"line":1,"column":36}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":22,"column":0},"generated":{"line":1,"column":38}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":24,"column":0},"generated":{"line":1,"column":41}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":24,"column":0},"generated":{"line":1,"column":45}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":24,"column":0},"generated":{"line":1,"column":47}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":24,"column":0},"generated":{"line":1,"column":49}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":26,"column":0},"generated":{"line":1,"column":52}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":26,"column":0},"generated":{"line":1,"column":56}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":26,"column":0},"generated":{"line":1,"column":60}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":26,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":28,"column":0},"generated":{"line":1,"column":67}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":28,"column":0},"generated":{"line":1,"column":69}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":28,"column":0},"generated":{"line":1,"column":84}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":30,"column":0},"generated":{"line":1,"column":89}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":30,"column":0},"generated":{"line":1,"column":91}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":30,"column":0},"generated":{"line":1,"column":94}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":30,"column":0},"generated":{"line":1,"column":96}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":34,"column":0},"generated":{"line":1,"column":100}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":34,"column":0},"generated":{"line":1,"column":107}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":37,"column":0},"generated":{"line":1,"column":110}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":37,"column":0},"generated":{"line":1,"column":117}},{"source":"node_modules/phaser/src/utils/object/MergeRight.js","original":{"line":37,"column":0},"generated":{"line":1,"column":125}}],"sources":{"node_modules/phaser/src/utils/object/MergeRight.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Clone = require('./Clone');\r\n\r\n/**\r\n * Creates a new Object using all values from obj1.\r\n * \r\n * Then scans obj2. If a property is found in obj2 that *also* exists in obj1, the value from obj2 is used, otherwise the property is skipped.\r\n *\r\n * @function Phaser.Utils.Objects.MergeRight\r\n * @since 3.0.0\r\n *\r\n * @param {object} obj1 - [description]\r\n * @param {object} obj2 - [description]\r\n *\r\n * @return {object} [description]\r\n */\r\nvar MergeRight = function (obj1, obj2)\r\n{\r\n    var clone = Clone(obj1);\r\n\r\n    for (var key in obj2)\r\n    {\r\n        if (clone.hasOwnProperty(key))\r\n        {\r\n            clone[key] = obj2[key];\r\n        }\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nmodule.exports = MergeRight;\r\n"},"lineCount":null}},"hash":"775159fd69a1bd9e561a929469176f25","cacheData":{"env":{}}}